/*
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 * Autogenerated by Loqui.  Do not manually change.
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
*/
using System;
using System.Collections.Generic;
using Mutagen.Bethesda.Plugins.Records.Internals;
using Mutagen.Bethesda.Plugins.Aspects;
using Loqui;

namespace Mutagen.Bethesda.Fallout4.Internals
{
    public class AspectInterfaceMapping : IAspectInterfaceMapping
    {
        public IReadOnlyDictionary<Type, ILoquiRegistration[]> InterfaceToObjectTypes { get; }

        public GameCategory GameCategory => GameCategory.Fallout4;

        public AspectInterfaceMapping()
        {
            var dict = new Dictionary<Type, ILoquiRegistration[]>();
            dict[typeof(INamed)] = new ILoquiRegistration[]
            {
                ActionRecord_Registration.Instance,
                Class_Registration.Instance,
                Keyword_Registration.Instance,
                Component_Registration.Instance,
                Race_Registration.Instance,
                MaterialType_Registration.Instance,
                Faction_Registration.Instance,
                HeadPart_Registration.Instance,
            };
            dict[typeof(INamedGetter)] = dict[typeof(INamed)];
            dict[typeof(IObjectBounded)] = new ILoquiRegistration[]
            {
                Grass_Registration.Instance,
                Component_Registration.Instance,
                AcousticSpace_Registration.Instance,
                TextureSet_Registration.Instance,
                SoundMarker_Registration.Instance,
            };
            dict[typeof(IObjectBoundedGetter)] = dict[typeof(IObjectBounded)];
            dict[typeof(IModeled)] = new ILoquiRegistration[]
            {
                Grass_Registration.Instance,
                HeadPart_Registration.Instance,
            };
            dict[typeof(IModeledGetter)] = dict[typeof(IModeled)];
            dict[typeof(IKeywordCommon)] = new ILoquiRegistration[]
            {
                Keyword_Registration.Instance,
            };
            dict[typeof(IKeywordCommonGetter)] = dict[typeof(IKeywordCommon)];
            dict[typeof(IKeyworded<IKeywordGetter>)] = new ILoquiRegistration[]
            {
                Race_Registration.Instance,
            };
            dict[typeof(IKeywordedGetter<IKeywordGetter>)] = dict[typeof(IKeyworded<IKeywordGetter>)];
            InterfaceToObjectTypes = dict;
        }
    }
}

