/*
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 * Autogenerated by Loqui.  Do not manually change.
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
*/
using System;
using System.Collections.Generic;
using Mutagen.Bethesda.Core;

namespace Mutagen.Bethesda.Fallout4.Internals
{
    public class LinkInterfaceMapping : ILinkInterfaceMapping
    {
        public IReadOnlyDictionary<Type, Type[]> InterfaceToObjectTypes { get; }

        public GameCategory GameCategory => GameCategory.Fallout4;

        public LinkInterfaceMapping()
        {
            var dict = new Dictionary<Type, Type[]>();
            dict[typeof(IIdleRelation)] = new Type[]
            {
                typeof(ActionRecord),
            };
            dict[typeof(IIdleRelationGetter)] = dict[typeof(IIdleRelation)];
            dict[typeof(IDamageTypeTarget)] = new Type[]
            {
                typeof(ActorValueInformation),
                typeof(ASpell),
            };
            dict[typeof(IDamageTypeTargetGetter)] = dict[typeof(IDamageTypeTarget)];
            dict[typeof(IKeywordLinkedReference)] = new Type[]
            {
                typeof(Keyword),
            };
            dict[typeof(IKeywordLinkedReferenceGetter)] = dict[typeof(IKeywordLinkedReference)];
            dict[typeof(ILocationRecord)] = new Type[]
            {
                typeof(LocationReferenceType),
            };
            dict[typeof(ILocationRecordGetter)] = dict[typeof(ILocationRecord)];
            dict[typeof(IObjectId)] = new Type[]
            {
                typeof(TextureSet),
            };
            dict[typeof(IObjectIdGetter)] = dict[typeof(IObjectId)];
            InterfaceToObjectTypes = dict;
        }
    }
}

