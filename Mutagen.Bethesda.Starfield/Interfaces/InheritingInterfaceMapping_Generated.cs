/*
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 * Autogenerated by Loqui.  Do not manually change.
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
*/
using System;
using System.Collections.Generic;
using Mutagen.Bethesda.Plugins.Records.Mapping;
using Loqui;

namespace Mutagen.Bethesda.Starfield;

internal class StarfieldInheritingInterfaceMapping : IInterfaceMapping
{
    public IReadOnlyDictionary<Type, InterfaceMappingResult> InterfaceToObjectTypes { get; }

    public GameCategory GameCategory => GameCategory.Starfield;

    public StarfieldInheritingInterfaceMapping()
    {
        var dict = new Dictionary<Type, InterfaceMappingResult>();
        dict[typeof(IArmorModification)] = new InterfaceMappingResult(true, new ILoquiRegistration[]
        {
            AObjectModification_Registration.Instance,
        });
        dict[typeof(IArmorModificationGetter)] = dict[typeof(IArmorModification)] with { Setter = false };
        dict[typeof(IContainerModification)] = new InterfaceMappingResult(true, new ILoquiRegistration[]
        {
            AObjectModification_Registration.Instance,
        });
        dict[typeof(IContainerModificationGetter)] = dict[typeof(IContainerModification)] with { Setter = false };
        dict[typeof(IFloraModification)] = new InterfaceMappingResult(true, new ILoquiRegistration[]
        {
            AObjectModification_Registration.Instance,
        });
        dict[typeof(IFloraModificationGetter)] = dict[typeof(IFloraModification)] with { Setter = false };
        dict[typeof(IGameSettingBool)] = new InterfaceMappingResult(true, new ILoquiRegistration[]
        {
            GameSetting_Registration.Instance,
        });
        dict[typeof(IGameSettingBoolGetter)] = dict[typeof(IGameSettingBool)] with { Setter = false };
        dict[typeof(IGameSettingFloat)] = new InterfaceMappingResult(true, new ILoquiRegistration[]
        {
            GameSetting_Registration.Instance,
        });
        dict[typeof(IGameSettingFloatGetter)] = dict[typeof(IGameSettingFloat)] with { Setter = false };
        dict[typeof(IGameSettingInt)] = new InterfaceMappingResult(true, new ILoquiRegistration[]
        {
            GameSetting_Registration.Instance,
        });
        dict[typeof(IGameSettingIntGetter)] = dict[typeof(IGameSettingInt)] with { Setter = false };
        dict[typeof(IGameSettingString)] = new InterfaceMappingResult(true, new ILoquiRegistration[]
        {
            GameSetting_Registration.Instance,
        });
        dict[typeof(IGameSettingStringGetter)] = dict[typeof(IGameSettingString)] with { Setter = false };
        dict[typeof(IGameSettingUInt)] = new InterfaceMappingResult(true, new ILoquiRegistration[]
        {
            GameSetting_Registration.Instance,
        });
        dict[typeof(IGameSettingUIntGetter)] = dict[typeof(IGameSettingUInt)] with { Setter = false };
        dict[typeof(INpcModification)] = new InterfaceMappingResult(true, new ILoquiRegistration[]
        {
            AObjectModification_Registration.Instance,
        });
        dict[typeof(INpcModificationGetter)] = dict[typeof(INpcModification)] with { Setter = false };
        dict[typeof(IObjectModification)] = new InterfaceMappingResult(true, new ILoquiRegistration[]
        {
            AObjectModification_Registration.Instance,
        });
        dict[typeof(IObjectModificationGetter)] = dict[typeof(IObjectModification)] with { Setter = false };
        dict[typeof(IUnknownObjectModification)] = new InterfaceMappingResult(true, new ILoquiRegistration[]
        {
            AObjectModification_Registration.Instance,
        });
        dict[typeof(IUnknownObjectModificationGetter)] = dict[typeof(IUnknownObjectModification)] with { Setter = false };
        dict[typeof(IWeaponModification)] = new InterfaceMappingResult(true, new ILoquiRegistration[]
        {
            AObjectModification_Registration.Instance,
        });
        dict[typeof(IWeaponModificationGetter)] = dict[typeof(IWeaponModification)] with { Setter = false };
        InterfaceToObjectTypes = dict;
    }
}

