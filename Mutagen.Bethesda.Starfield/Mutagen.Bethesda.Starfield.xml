<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mutagen.Bethesda.Starfield</name>
    </assembly>
    <members>
        <member name="T:Mutagen.Bethesda.Starfield.GroupTypeEnum">
            <summary>
            Different categories of Group records
            </summary>
        </member>
        <member name="T:Mutagen.Bethesda.Starfield.IModeled">
            <summary>
            Common interface for records that have a model
            </summary>
        </member>
        <member name="T:Mutagen.Bethesda.Starfield.IModeledGetter">
            <summary>
            Common interface for records that have a model
            </summary>
        </member>
        <member name="T:Mutagen.Bethesda.Starfield.SimpleModel">
            <summary>
            Implemented by: [Model]
            </summary>
        </member>
        <member name="T:Mutagen.Bethesda.Starfield.ISimpleModel">
            <summary>
            Implemented by: [Model]
            </summary>
        </member>
        <member name="T:Mutagen.Bethesda.Starfield.ISimpleModelGetter">
            <summary>
            Implemented by: [Model]
            </summary>
        </member>
        <member name="T:Mutagen.Bethesda.Starfield.StarfieldMajorRecord">
            <summary>
            Implemented by: [Npc, Race, Weapon]
            </summary>
        </member>
        <member name="T:Mutagen.Bethesda.Starfield.IStarfieldMajorRecord">
            <summary>
            Implemented by: [Npc, Race, Weapon]
            </summary>
        </member>
        <member name="T:Mutagen.Bethesda.Starfield.IStarfieldMajorRecordGetter">
            <summary>
            Implemented by: [Npc, Race, Weapon]
            </summary>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.LinkCacheMixIns.ToImmutableLinkCache(Mutagen.Bethesda.Starfield.IStarfieldModGetter)">
            <summary>
            Creates a Link Cache using a single mod as its link target. <br/>
            Modification of the target Mod is not safe.  Internal caches can become incorrect if 
            modifications occur on content already cached.
            </summary>
            <param name="mod">Mod to construct the package relative to</param>
            <returns>LinkPackage attached to given mod</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.LinkCacheMixIns.ToMutableLinkCache(Mutagen.Bethesda.Starfield.IStarfieldModGetter)">
            <summary>
            Creates a Link Cache using a single mod as its link target.  Mod is allowed to be modified afterwards, but
            this comes at a performance cost of not allowing much caching to be done.  If the mod is not expected to
            be modified afterwards, use ImmutableModLinkCache instead.<br/>
            </summary>
            <param name="mod">Mod to construct the package relative to</param>
            <returns>LinkPackage attached to given mod</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.LinkCacheMixIns.ToImmutableLinkCache(Mutagen.Bethesda.Plugins.Order.ILoadOrderGetter{Mutagen.Bethesda.Starfield.IStarfieldModGetter})">
            <summary>
            Creates a new linking package relative to a load order.<br/>
            Will resolve links to the highest overriding mod containing the record being sought. <br/>
            Modification of the target LoadOrder, or Mods on the LoadOrder is not safe.  Internal caches can become
            incorrect if modifications occur on content already cached.
            </summary>
            <param name="loadOrder">LoadOrder to construct the package relative to</param>
            <returns>LinkPackage attached to given LoadOrder</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.LinkCacheMixIns.ToImmutableLinkCache(Mutagen.Bethesda.Plugins.Order.ILoadOrderGetter{Mutagen.Bethesda.Plugins.Order.IModListingGetter{Mutagen.Bethesda.Starfield.IStarfieldModGetter}})">
            <summary>
            Creates a new linking package relative to a load order.<br/>
            Will resolve links to the highest overriding mod containing the record being sought. <br/>
            Modification of the target LoadOrder, or Mods on the LoadOrder is not safe.  Internal caches can become
            incorrect if modifications occur on content already cached.
            </summary>
            <param name="loadOrder">LoadOrder to construct the package relative to</param>
            <returns>LinkPackage attached to given LoadOrder</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.LinkCacheMixIns.ToImmutableLinkCache(System.Collections.Generic.IEnumerable{Mutagen.Bethesda.Plugins.Order.IModListingGetter{Mutagen.Bethesda.Starfield.IStarfieldModGetter}})">
            <summary>
            Creates a new linking package relative to a load order.<br/>
            Will resolve links to the highest overriding mod containing the record being sought. <br/>
            Modification of the target LoadOrder, or Mods on the LoadOrder is not safe.  Internal caches can become
            incorrect if modifications occur on content already cached.
            </summary>
            <param name="loadOrder">LoadOrder to construct the package relative to</param>
            <returns>LinkPackage attached to given LoadOrder</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.LinkCacheMixIns.ToImmutableLinkCache(System.Collections.Generic.IEnumerable{Mutagen.Bethesda.Starfield.IStarfieldModGetter})">
            <summary>
            Creates a new linking package relative to a load order.<br/>
            Will resolve links to the highest overriding mod containing the record being sought. <br/>
            Modification of the target LoadOrder, or Mods on the LoadOrder is not safe.  Internal caches can become
            incorrect if modifications occur on content already cached.
            </summary>
            <param name="loadOrder">LoadOrder to construct the package relative to</param>
            <returns>LinkPackage attached to given LoadOrder</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.LinkCacheMixIns.ToMutableLinkCache(Mutagen.Bethesda.Plugins.Order.ILoadOrderGetter{Mutagen.Bethesda.Starfield.IStarfieldModGetter},Mutagen.Bethesda.Starfield.IStarfieldMod[])">
            <summary>
            Creates a mutable load order link cache by combining an existing immutable load order cache,
            plus a set of mods to be put at the end of the load order and allow to be mutable.
            </summary>
            <param name="immutableBaseCache">LoadOrderCache to use as the immutable base</param>
            <param name="mutableMods">Set of mods to place at the end of the load order, which are allowed to be modified afterwards</param>
            <returns>LinkPackage attached to given LoadOrder</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.LinkCacheMixIns.ToMutableLinkCache(Mutagen.Bethesda.Plugins.Order.ILoadOrderGetter{Mutagen.Bethesda.Plugins.Order.IModListingGetter{Mutagen.Bethesda.Starfield.IStarfieldModGetter}},Mutagen.Bethesda.Starfield.IStarfieldMod[])">
            <summary>
            Creates a mutable load order link cache by combining an existing immutable load order cache,
            plus a set of mods to be put at the end of the load order and allow to be mutable.
            </summary>
            <param name="immutableBaseCache">LoadOrderCache to use as the immutable base</param>
            <param name="mutableMods">Set of mods to place at the end of the load order, which are allowed to be modified afterwards</param>
            <returns>LinkPackage attached to given LoadOrder</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.LinkCacheMixIns.ToMutableLinkCache(System.Collections.Generic.IEnumerable{Mutagen.Bethesda.Starfield.IStarfieldModGetter},Mutagen.Bethesda.Starfield.IStarfieldMod[])">
            <summary>
            Creates a mutable load order link cache by combining an existing immutable load order cache,
            plus a set of mods to be put at the end of the load order and allow to be mutable.
            </summary>
            <param name="immutableBaseCache">LoadOrderCache to use as the immutable base</param>
            <param name="mutableMods">Set of mods to place at the end of the load order, which are allowed to be modified afterwards</param>
            <returns>LinkPackage attached to given LoadOrder</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.TypeOptionSolidifierMixIns.Npc(System.Collections.Generic.IEnumerable{Mutagen.Bethesda.Plugins.Order.IModListingGetter{Mutagen.Bethesda.Starfield.IStarfieldModGetter}})">
            <summary>
            Scope a load order query to Npc
            </summary>
            <param name="listings">ModListings to query</param>
            <returns>A typed object to do further queries on Npc</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.TypeOptionSolidifierMixIns.Npc(System.Collections.Generic.IEnumerable{Mutagen.Bethesda.Starfield.IStarfieldModGetter})">
            <summary>
            Scope a load order query to Npc
            </summary>
            <param name="mods">Mods to query</param>
            <returns>A typed object to do further queries on Npc</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.TypeOptionSolidifierMixIns.Race(System.Collections.Generic.IEnumerable{Mutagen.Bethesda.Plugins.Order.IModListingGetter{Mutagen.Bethesda.Starfield.IStarfieldModGetter}})">
            <summary>
            Scope a load order query to Race
            </summary>
            <param name="listings">ModListings to query</param>
            <returns>A typed object to do further queries on Race</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.TypeOptionSolidifierMixIns.Race(System.Collections.Generic.IEnumerable{Mutagen.Bethesda.Starfield.IStarfieldModGetter})">
            <summary>
            Scope a load order query to Race
            </summary>
            <param name="mods">Mods to query</param>
            <returns>A typed object to do further queries on Race</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.TypeOptionSolidifierMixIns.StarfieldMajorRecord(System.Collections.Generic.IEnumerable{Mutagen.Bethesda.Plugins.Order.IModListingGetter{Mutagen.Bethesda.Starfield.IStarfieldModGetter}})">
            <summary>
            Scope a load order query to StarfieldMajorRecord
            </summary>
            <param name="listings">ModListings to query</param>
            <returns>A typed object to do further queries on StarfieldMajorRecord</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.TypeOptionSolidifierMixIns.StarfieldMajorRecord(System.Collections.Generic.IEnumerable{Mutagen.Bethesda.Starfield.IStarfieldModGetter})">
            <summary>
            Scope a load order query to StarfieldMajorRecord
            </summary>
            <param name="mods">Mods to query</param>
            <returns>A typed object to do further queries on StarfieldMajorRecord</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.TypeOptionSolidifierMixIns.Weapon(System.Collections.Generic.IEnumerable{Mutagen.Bethesda.Plugins.Order.IModListingGetter{Mutagen.Bethesda.Starfield.IStarfieldModGetter}})">
            <summary>
            Scope a load order query to Weapon
            </summary>
            <param name="listings">ModListings to query</param>
            <returns>A typed object to do further queries on Weapon</returns>
        </member>
        <member name="M:Mutagen.Bethesda.Starfield.TypeOptionSolidifierMixIns.Weapon(System.Collections.Generic.IEnumerable{Mutagen.Bethesda.Starfield.IStarfieldModGetter})">
            <summary>
            Scope a load order query to Weapon
            </summary>
            <param name="mods">Mods to query</param>
            <returns>A typed object to do further queries on Weapon</returns>
        </member>
        <member name="P:Mutagen.Bethesda.Starfield.Weapon.Model">
            <summary>
            Aspects: IModeled
            </summary>
        </member>
        <member name="P:Mutagen.Bethesda.Starfield.IWeapon.Model">
            <summary>
            Aspects: IModeled
            </summary>
        </member>
        <member name="P:Mutagen.Bethesda.Starfield.IWeaponGetter.Model">
            <summary>
            Aspects: IModeledGetter
            </summary>
        </member>
        <member name="P:ThisAssembly.Git.IsDirty">
            <summary>
            Gets whether the current repository is dirty.
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.IsDirtyString">
            <summary>
            => @""
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.RepositoryUrl">
            <summary>
            => @"https://github.com/Mutagen-Modding/Mutagen.git"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Branch">
            <summary>
            => @"dev"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Commit">
            <summary>
            => @"bcc9c618d"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Sha">
            <summary>
            => @"bcc9c618d975da07e9d1c20a7309a81ecc55da1a"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.CommitDate">
            <summary>
            => @"2023-08-30T20:57:12-05:00"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Commits">
            <summary>
            => @"37"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Tag">
            <summary>
            => @"0.42-37-gbcc9c618d"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseTag">
            <summary>
            => @"0.42"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Major">
            <summary>
            => @"0"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Minor">
            <summary>
            => @"42"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Patch">
            <summary>
            => @"0"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Major">
            <summary>
            => @"0"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Minor">
            <summary>
            => @"42"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Patch">
            <summary>
            => @"37"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Label">
            <summary>
            => @""
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.DashLabel">
            <summary>
            => @""
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Source">
            <summary>
            => @"Tag"
            </summary>
        </member>
    </members>
</doc>
