<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MutagenSource"
    targetNamespace="http://tempuri.org/LoquiSource.xsd"
    elementFormDefault="qualified"
    xmlns="http://tempuri.org/LoquiSource.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:redefine schemaLocation="../../Loqui/Loqui/LoquiSource.xsd">
    
    <xs:complexType name="ObjectType" >
      <xs:complexContent>
        <xs:extension base="ObjectType">
          <xs:choice>
            <xs:element name="BaseRecordTypeOverrides" type="RecordTypeMappingsType" minOccurs="0" />
            <xs:element name="CustomRecordTypeTrigger" type="xs:string" minOccurs="0" />
          </xs:choice>
          <xs:attribute name="recordType" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                Typical four letter ASCII tag used for the record type.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="objType" type="MutagenObjectType" use="required">
            <xs:annotation>
              <xs:documentation>
                Type of mutagen object this is creating.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="failOnUnknownType" type="xs:boolean" >
            <xs:annotation>
              <xs:documentation>
                Whether an unknown type encountered should be considered an error or warning.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="customBinaryEnd" type="CustomEndType" >
            <xs:annotation>
              <xs:documentation>
                Whether to add custom logic after typical binary parsing.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="customBinary" type="xs:boolean" >
            <xs:annotation>
              <xs:documentation>
                Whether to generate typical binary translation
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="StructType">
      <xs:complexContent>
        <xs:extension base="StructType">
          <xs:attribute name="recordType" type="xs:string" >
            <xs:annotation>
              <xs:documentation>
                Typical four letter ASCII tag used for the record type.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Field">
      <xs:complexContent>
        <xs:extension base="Field">
          <xs:attribute name="recordType" type="xs:string" >
            <xs:annotation>
              <xs:documentation>
                Typical four letter ASCII tag used for the record type.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binary" type="MutagenBinaryType" use="optional" >
            <xs:annotation>
              <xs:documentation>
                How to generate binary translations
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RefDirect">
      <xs:complexContent>
        <xs:extension base="RefDirect">
          <xs:choice>
            <xs:element name="RecordTypeOverrides" type="RecordTypeMappingsType" minOccurs="0" />
          </xs:choice>
          <xs:attribute name="recordType" type="xs:string" >
            <xs:annotation>
              <xs:documentation>
                Typical four letter ASCII tag used for the record type.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="markerType" type="xs:string">
            <xs:annotation>
              <xs:documentation>
                Typical four letter ASCII tag used for the discarded marker type.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="binary" type="MutagenBinaryType" use="optional" >
            <xs:annotation>
              <xs:documentation>
                How to generate binary translations
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="objType" type="MutagenObjectType">
            <xs:annotation>
              <xs:documentation>
                Type of mutagen object this is referencing.  Only needed for interface typed references.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ByteArray">
      <xs:complexContent>
        <xs:extension base="ByteArray">
          <xs:attribute name="length" type="xs:string" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Color">
      <xs:complexContent>
        <xs:extension base="Color">
          <xs:attribute name="extraByte" type="xs:boolean" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="String">
      <xs:complexContent>
        <xs:extension base="String">
          <xs:attribute name="nullTerminate" type="xs:boolean" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Dict">
      <xs:complexContent>
        <xs:extension base="Dict">
          <xs:attribute name="lengthLength" type="xs:byte" />
          <xs:attribute name="thread" type="xs:boolean" />
          <xs:attribute name="asyncItems" type="xs:boolean" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="List">
      <xs:complexContent>
        <xs:extension base="List">
          <xs:attribute name="lengthLength" type="xs:byte" />
          <xs:attribute name="thread" type="xs:boolean" />
          <xs:attribute name="asyncItems" type="xs:boolean" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="RefListField">
      <xs:complexContent>
        <xs:extension base="RefListField">
          <xs:attribute name="thread" type="xs:boolean" />
          <xs:attribute name="asyncItems" type="xs:boolean" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="Enum">
      <xs:complexContent>
        <xs:extension base="Enum">
          <xs:attribute name="byteLength" type="xs:byte" />
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>

    <xs:group name="NamedFieldOptions">
      <xs:choice>
        <xs:group ref="NamedFieldOptions"/>
        <xs:element name="FormIDLink" type="NFormIDLink"/>
        <xs:element name="FormID" type="NFormID"/>
        <xs:element name="FormKey" type="NFormKey"/>
        <xs:element name="ModKey" type="NModKey"/>
        <xs:element name="Buffer" type="NBuffer"/>
        <xs:element name="Data" type="DataType" />
        <xs:element name="SpecialParse" type="NSpecialParse"/>
        <xs:element name="Zero" type="ZeroType"/>
        <xs:element name="Transfer" type="TransferType"/>
        <xs:element name="Group" type="GroupType" />
        <xs:element name="CustomLogic" type="CustomLogic" />
      </xs:choice>
    </xs:group>

    <xs:group name="FieldOptions">
      <xs:choice>
        <xs:group ref="FieldOptions"/>
        <xs:element name="FormIDLink" type="FormIDLink"/>
        <xs:element name="FormID" type="FormID"/>
        <xs:element name="FormKey" type="FormKey"/>
        <xs:element name="ModKey" type="ModKey"/>
        <xs:element name="Buffer" type="Buffer"/>
        <xs:element name="SpecialParse" type="SpecialParse"/>
        <xs:element name="Zero" type="ZeroType"/>
        <xs:element name="Transfer" type="TransferType"/>
      </xs:choice>
    </xs:group>
  </xs:redefine>

  <xs:simpleType name="MutagenObjectType" final="restriction" >
    <xs:restriction base="xs:string">
      <xs:enumeration value="Record" />
      <xs:enumeration value="Subrecord" />
      <xs:enumeration value="Group" />
      <xs:enumeration value="Mod" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="CustomEndType" final="restriction" >
    <xs:restriction base="xs:string">
      <xs:enumeration value="Off" />
      <xs:enumeration value="Normal" />
      <xs:enumeration value="Async" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="MutagenBinaryType" final="restriction" >
    <xs:restriction base="xs:string">
      <xs:enumeration value="Normal" />
      <xs:enumeration value="DoNothing" />
      <xs:enumeration value="NoGeneration" />
      <xs:enumeration value="Custom" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="Buffer" >
    <xs:complexContent>
      <xs:extension base="Nothing">
        <xs:attribute name="length" type="xs:int" use="required" />
        <xs:attribute name="static" type="xs:boolean" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NBuffer" >
    <xs:complexContent>
      <xs:extension base="Buffer">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ZeroType">
    <xs:attribute name="byteLength" type="xs:byte" use="required" />
  </xs:complexType>

  <xs:complexType name="CustomLogic">
    <xs:attribute name="name" type="xs:string" use="required" />
    <xs:attribute name="recordType" type="xs:string" >
      <xs:annotation>
        <xs:documentation>
          Typical four letter ASCII tag used for the record type.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="TransferType">
    <xs:attribute name="byteLength" type="xs:byte" use="required" />
  </xs:complexType>

  <xs:complexType name="SpecialParse" >
    <xs:attribute name="recordType" type="xs:string" use="required" />
  </xs:complexType>

  <xs:complexType name="NSpecialParse" >
    <xs:complexContent>
      <xs:extension base="SpecialParse">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="FormIDType" final="restriction" >
    <xs:restriction base="xs:string">
      <xs:enumeration value="Normal" />
      <xs:enumeration value="EDIDChars" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="FormIDLink" >
    <xs:complexContent>
      <xs:extension base="RefDirectField">
        <xs:attribute name="type" type="FormIDType" >
          <xs:annotation>
            <xs:documentation>
              Type of formID system to use
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NFormIDLink" >
    <xs:complexContent>
      <xs:extension base="FormIDLink">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="FormID" >
    <xs:complexContent>
      <xs:extension base="Field" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NFormID" >
    <xs:complexContent>
      <xs:extension base="FormID">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="FormKey" >
    <xs:complexContent>
      <xs:extension base="Field" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NFormKey" >
    <xs:complexContent>
      <xs:extension base="FormKey">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ModKey" >
    <xs:complexContent>
      <xs:extension base="Field" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="NModKey" >
    <xs:complexContent>
      <xs:extension base="ModKey">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DataTypeFieldRangeType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="NamedFieldOptions" minOccurs="0" maxOccurs="unbounded" />
    </xs:choice>
    <xs:attribute name="Min" use="required" />
  </xs:complexType>
  
  <xs:complexType name="DataTypeFields" >
    <xs:choice minOccurs="0" maxOccurs="unbounded" >
      <xs:group ref="NamedFieldOptions" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="Break" />
      <xs:element name="Range" type="DataTypeFieldRangeType" />
    </xs:choice>
  </xs:complexType>
  
  <xs:complexType name="DataType" >
    <xs:choice minOccurs="0" maxOccurs="unbounded" >
      <xs:element name="Fields" type="DataTypeFields" minOccurs="0" maxOccurs="1" />
    </xs:choice>
    <xs:attribute name="recordType" />
  </xs:complexType>

  <xs:complexType name="RecordTypeMappingsType" >
    <xs:choice>
      <xs:element name="Mapping" type="RecordTypeMappingType" minOccurs="0" maxOccurs="unbounded" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="RecordTypeMappingType" >
    <xs:attribute name="From" type="xs:string" use="required" />
    <xs:attribute name="To" type="xs:string" use="required" />
  </xs:complexType>

  <xs:complexType name="GroupType" >
    <xs:attribute name="name" use="required" />
    <xs:attribute name="refName" use="required" />
  </xs:complexType>
  
</xs:schema>
